#pragma once

#include <cstdint>

namespace yarn {

enum class Opcode
{
	/** Loads a UProperty at the instruction pointer into GProperty and writes it to the return
	   value address. */
	LocalVariable = 0,
	/** Loads a UProperty at the instruction pointer into GProperty; then reads an instance variable
	   on the object into the return value address. */
	InstanceVariable = 1,
	/** Similar to InstanceVariable but reads from the class default object. */
	DefaultVariable = 2,
	StateVariable = 3,

	/** Switch on a couple values. Not sure how this works quite yet. */
	Switch = 5,
	/** Unconditional jump to 16-bit address inside the current chunk of bytecode. */
	Jump = 6,
	/** Conditional jump to 16-bit address. The address is encoded first, followed by the condition
	   instruction. */
	JumpIfNot = 7,
	/** Causes a crash, probably. Sets the IP to nullptr, not sure when that would be valid. */
	Stop = 8,
	/** Logs an error message if a condition is false. */
	Assert = 9,
	/** Probably a `switch` `case` label, again I haven't looked into how switches work. */
	Case = 10,
	/** Noop. */
	Nothing = 11,

	GotoLabel = 13,
	EatReturnValue = 14,
	Let = 15,
	DynArrayElement = 16,
	New = 17,
	ClassContext = 18,
	MetaCast = 19,
	LetBool = 20,

	EndFunctionParms = 22,
	Self = 23,

	Context = 25,
	ArrayElement = 26,
	VirtualFunction = 27,
	FinalFunction = 28,
	IntConst = 29,
	FloatConst = 30,
	StringConst = 31,
	ObjectConst = 32,
	NameConst = 33,
	RotationConst = 34,
	VectorConst = 35,
	ByteConst = 36,
	IntZero = 37,
	IntOne = 38,
	True = 39,
	False = 40,
	NativeParm = 41,
	NoObject = 42,

	IntConstByte = 44,
	BoolVariable = 45,
	DynamicCast = 46,
	Iterator = 47,
	IteratorPop = 48,

	StructCmpEq = 50,
	StructCmpNe = 51,
	UnicodeStringConst = 52,
	StructMember = 53,
	DynArrayLength = 54,
	GlobalFunction = 55,
	PrimitiveCast = 56,
	DynArrayInsert = 57,
	ReturnNothing = 58,
	EqualEqual_DelegateDelegate = 59,
	NotEqual_DelegateDelegate = 60,
	EqualEqual_DelegateFunction = 61,
	NotEqual_DelegateFunction = 62,
	EmptyDelegate = 63,
	DynArrayRemove = 64,
	DebugInfo = 65,
	DelegateFunction = 66,
	DelegateProperty = 67,
	LetDelegate = 68,
	Conditional = 69,
	DynArrayFind = 70,
	DynArrayFindStruct = 71,
	LocalOutVariable = 72,
	DefaultParmValue = 73,
	EmptyParmValue = 74,
	InstanceDelegate = 75,

	InterfaceContext = 81,
	InterfaceCast = 82,
	EndOfScript = 83,
	DynArrayAdd = 84,
	DynArrayAddItem = 85,
	DynArrayRemoveItem = 86,
	DynArrayInsertItem = 87,
	DynArrayIterator = 88,
	DynArraySort = 89,
	JumpIfNotEditorOnly = 90,

	HighNative0 = 96,
	HighNative1 = 97,
	HighNative2 = 98,
	HighNative3 = 99,
	HighNative4 = 100,
	HighNative5 = 101,
	HighNative6 = 102,
	HighNative7 = 103,
	HighNative8 = 104,
	HighNative9 = 105,
	HighNative10 = 106,
	HighNative11 = 107,
	HighNative12 = 108,
	HighNative13 = 109,
	HighNative14 = 110,
	HighNative15 = 111,
	Concat_StrStr = 112,
	GotoState = 113,
	EqualEqual_ObjectObject = 114,
	Less_StrStr = 115,
	Greater_StrStr = 116,
	Enable = 117,
	Disable = 118,
	NotEqual_ObjectObject = 119,
	LessEqual_StrStr = 120,
	GreaterEqual_StrStr = 121,
	EqualEqual_StrStr = 122,
	NotEqual_StrStr = 123,
	ComplementEqual_StrStr = 124,
	Len = 125,
	InStr = 126,
	Mid = 127,
	Left = 128,
	Not_PreBool = 129,
	AndAnd_BoolBool = 130,
	XorXor_BoolBool = 131,
	OrOr_BoolBool = 132,
	MultiplyEqual_ByteByte = 133,
	DivideEqual_ByteByte = 134,
	AddEqual_ByteByte = 135,
	SubtractEqual_ByteByte = 136,
	AddAdd_PreByte = 137,
	SubtractSubtract_PreByte = 138,
	AddAdd_Byte = 139,
	SubtractSubtract_Byte = 140,
	Complement_PreInt = 141,
	EqualEqual_RotatorRotator = 142,
	Subtract_PreInt = 143,
	Multiply_IntInt = 144,
	Divide_IntInt = 145,
	Add_IntInt = 146,
	Subtract_IntInt = 147,
	LessLess_IntInt = 148,
	GreaterGreater_IntInt = 149,
	Less_IntInt = 150,
	Greater_IntInt = 151,
	LessEqual_IntInt = 152,
	GreaterEqual_IntInt = 153,
	EqualEqual_IntInt = 154,
	NotEqual_IntInt = 155,
	And_IntInt = 156,
	Xor_IntInt = 157,
	Or_IntInt = 158,
	MultiplyEqual_IntFloat = 159,
	DivideEqual_IntFloat = 160,
	AddEqual_IntInt = 161,
	SubtractEqual_IntInt = 162,
	AddAdd_PreInt = 163,
	SubtractSubtract_PreInt = 164,
	AddAdd_Int = 165,
	SubtractSubtract_Int = 166,
	Rand = 167,
	At_StrStr = 168,
	Subtract_PreFloat = 169,
	MultiplyMultiply_FloatFloat = 170,
	Multiply_FloatFloat = 171,
	Divide_FloatFloat = 172,
	Percent_FloatFloat = 173,
	Add_FloatFloat = 174,
	Subtract_FloatFloat = 175,
	Less_FloatFloat = 176,
	Greater_FloatFloat = 177,
	LessEqual_FloatFloat = 178,
	GreaterEqual_FloatFloat = 179,
	EqualEqual_FloatFloat = 180,
	NotEqual_FloatFloat = 181,
	MultiplyEqual_FloatFloat = 182,
	DivideEqual_FloatFloat = 183,
	AddEqual_FloatFloat = 184,
	SubtractEqual_FloatFloat = 185,
	Abs = 186,
	Sin = 187,
	Cos = 188,
	Tan = 189,
	Atan = 190,
	Exp = 191,
	Loge = 192,
	Sqrt = 193,
	Square = 194,
	FRand = 195,
	GreaterGreaterGreater_IntInt = 196,
	IsA = 197,
	MultiplyEqual_ByteFloat = 198,
	Round = 199,

	Repl = 201,

	NotEqual_RotatorRotator = 203,

	ComplementEqual_FloatFloat = 210,
	Subtract_PreVector = 211,
	Multiply_VectorFloat = 212,
	Multiply_FloatVector = 213,
	Divide_VectorFloat = 214,
	Add_VectorVector = 215,
	Subtract_VectorVector = 216,
	EqualEqual_VectorVector = 217,
	NotEqual_VectorVector = 218,
	Dot_VectorVector = 219,
	Cross_VectorVector = 220,
	MultiplyEqual_VectorFloat = 221,
	DivideEqual_VectorFloat = 222,
	AddEqual_VectorVector = 223,
	SubtractEqual_VectorVector = 224,
	VSize = 225,
	Normal = 226,
	Normal2D = 227,
	VSizeSq = 228,
	GetAxes = 229,
	GetUnAxes = 230,
	LogInternal = 231,
	WarnInternal = 232,

	Right = 234,
	Caps = 235,
	Chr = 236,
	Asc = 237,
	Locs = 238,

	EqualEqual_BoolBool = 242,
	NotEqual_BoolBool = 243,
	FMin = 244,
	FMax = 245,
	FClamp = 246,
	Lerp = 247,

	Min = 249,
	Max = 250,
	Clamp = 251,
	VRand = 252,
	Percent_IntInt = 253,
	EqualEqual_NameName = 254,
	NotEqual_NameName = 255,

	ClassIsChildOf = 258,

	Add_QuatQuat = 270,
	Subtract_QuatQuat = 271,

	LessLess_VectorRotator = 275,
	GreaterGreater_VectorRotator = 276,

	IsInState = 281,

	GetStateName = 284,

	Multiply_RotatorFloat = 287,
	Multiply_FloatRotator = 288,
	Divide_RotatorFloat = 289,
	MultiplyEqual_RotatorFloat = 290,
	DivideEqual_RotatorFloat = 291,

	Multiply_VectorVector = 296,
	MultiplyEqual_VectorVector = 297,

	MirrorVectorByNormal = 300,

	Add_RotatorRotator = 316,
	Subtract_RotatorRotator = 317,
	AddEqual_RotatorRotator = 318,
	SubtractEqual_RotatorRotator = 319,
	RotRand = 320,

	ConcatEqual_StrStr = 322,
	AtEqual_StrStr = 323,
	SubtractEqual_StrStr = 324,

	SaveConfig = 536,

	ProjectOnTo = 1500,
	IsZero = 1501,
};

}
